 draw_config:
   # key dimensions, non-ortho layouts use key_h for width as well
   key_h: 80

   # keys border radius
   key_rx: 4
   key_ry: 4

   # key labels line spacing for multi-line labels
   line_spacing: 1

   # combo box dimensions
   combo_w: 45
   combo_h: 36

   # padding from the edge of cap to top and bottom legends
   small_pad: 4

   # Padding between keys
   inner_pad_w: 1.5
   inner_pad_h: 1.5

   # padding between layers
   outer_pad_w: 0
   outer_pad_h: 0

   # as it reads on the tin can, this comment is here for consistency
   append_colon_to_layer_header: false

   # shrink font size for legends wider than this many chars, set to 0 to disable
   # ideal value depends on the font size defined in svg_style and width of the boxes
   shrink_wide_legends: 5

   # Glyphs dimensions
   glyph_tap_size: 26
   glyph_hold_size: 18
   glyph_shifted_size: 18

   # Custom CSS
   svg_style: |
     /* inherit to force styles through use tags */
     svg path {
         fill: inherit;
     }
    /* font and background color specifications */

     rect,
     path {
       shape-rendering: geometricPrecision;
     }

     text {
         text-anchor: middle;
         dominant-baseline: middle;
         line-height: 1;
     }

     /* Layer labels */
     text.label {
         font-weight: bold;
         text-anchor: start;
         paint-order: stroke;
         # fill: var(--color--layer--text);
         dominant-baseline: text-before-edge;
     }


     /* Keys */
     rect.key,
     rect.combo {
         # fill: var(--color--key--bg);
         # stroke: var(--color--key--border);
     }
     .tap {
         # fill: var(--color--key--text--tap);
     }
     .shifted,
     .hold {
         font-size: 18px;
         text-anchor: middle;
     }
     .shifted {
         dominant-baseline: hanging;
         # fill: var(--color--key--text--shifted);
         translate: -25px 2px;
     }
     .hold {
         dominant-baseline: ideographic;
         # fill: var(--color--key--text--hold);
     }

     /*
      * Combos
      */
     # .combo {
         # --color--key--bg: var(--color--combo--bg);
         # --color--key--border: var(--color--combo--border);
         # --color--key--text--tap: var(--color--combo--text--tap);
         # --color--key--text--shifted: var(--color--combo--text--shifted);
         # --color--key--text--hold: var(--color--combo--text--hold);
     # }
     rect.combo {
         stroke-width: 0;
     }
     path.combo {
         stroke-width: 1;
         # stroke: var(--color--combo--dendron);
         stroke-dasharray: 2, 2;
         fill: none;
     }
     .combo.tap {
         font-size: 16px;
     }
     .combo.shifted {
         font-size: 13px;
         translate: -9px -2px;
     }
     .combo.hold {
         font-size: 16px;
         /* translate: 2px 0px; */
     }

     /*
      * Transparent, None, and Ghost Keys
      */
     .trans,
     .none,
     .ghost {
       opacity: 0.4;
     }
     .trans {
         # --color--key--bg: var(--color--trans--bg);
         # --color--key--border: var(--color--trans--border);
         # --color--key--text--tap: var(--color--trans--text--tap);
         # --color--key--text--shifted: var(--color--trans--text--shifted);
         # --color--key--text--hold: var(--color--trans--text--hold);
     }
     .none {
         # --color--key--bg: var(--color--none--bg);
         # --color--key--border: var(--color--none--border);
         # --color--key--text--tap: var(--color--none--text--tap);
         # --color--key--text--shifted: var(--color--none--text--shifted);
         # --color--key--text--hold: var(--color--none--text--hold);
     }
     .ghost {
         # --color--key--bg: var(--color--ghost--bg);
         # --color--key--border: var(--color--ghost--border);
         # --color--key--text--tap: var(--color--ghost--text--tap);
         # --color--key--text--shifted: var(--color--ghost--text--shifted);
         # --color--key--text--hold: var(--color--ghost--text--hold);
     }


     /*
      * Overrides
      */
     .shifted.mdi\:alpha-w-box {
       translate: 25px 0px;
     }
     .shifted.mdi\:usb {
       translate: -25px 25px;
     }
     .hold.mdi\:bluetooth {
       translate: 25px -25px;
     }

     /* Outer column + thumb keys */
     .keypos-0,
     .keypos-9,
     .keypos-10,
     .keypos-19,
     .keypos-20,
     .keypos-29,
     .keypos-30,
     .keypos-31,
     .keypos-32,
     .keypos-33,
     .keypos-34,
     .keypos-35,
     .keypos-36 {
         # --color--key--bg: var(--ctp-surface1);
         # --color--key--border: var(--ctp--subtext0);
     }

 parse_config:
   preprocess: true
   skip_binding_parsing: false
   raw_binding_map:
     '&ext_power EP_TOG': "üîå"
     "&caps_word": $$mdi:alpha-w-box$$
     '&bootloader': "üíæ"
     '&sys_reset': "üîÑ"
     '&reset_td': "üîÑ"
     '&dot_space_shift': ".‚éµ‚áß"

     "&ltsk MEDIA LSHIFT":
       tap: SK(‚áß)
       hold: MEDIA
     "&ltr NUM 0":
       tap: $$mdi:repeat-variant$$
       hold: $$mdi:numeric$$

     "&ltsk NUM BSPC":
       tap: $$mdi:backspace-outline$$
       hold: $$mdi:numeric$$

     "&lt MOUSE ESC":
       tap: $$mdi:keyboard-esc$$
       hold: $$mdi:mouse$$

     "&lt NAV SPACE":
       tap: $$mdi:keyboard-space$$
       hold: $$mdi:navigation-variant-outline$$

     "&lt FUN RET":
       tap: $$mdi:keyboard-return$$
       hold: $$mdi:function-variant$$

     # Bluetooth
     "&bt BT_SEL 0":
       tap: $$mdi:bluetooth-connect$$
       hold: 0
     "&bt BT_SEL 1":
       tap: $$mdi:bluetooth-connect$$
       hold: 1
     "&bt BT_SEL 2":
       tap: $$mdi:bluetooth-connect$$
       hold: 2
     "&bt BT_SEL 3":
       tap: $$mdi:bluetooth-connect$$
       hold: 3
     "&bt BT_SEL 4":
       tap: $$mdi:bluetooth-connect$$
       hold: 4
     '&bt BT_NXT':
       tap: $$mdi:bluetooth-connect$$
       hold: $$mdi:chevron-right$$
     '&bt BT_PRV':
       shifted: $$mdi:bluetooth-connect$$
       tap: ""
       hold: $$mdi:chevron-left$$
     '&bt BT_CLR':
       tap: $$mdi:bluetooth-connect$$
       hold: $$mdi:close-box-outline$$

     # Empty
     "&none":
       tap: $$mdi:minus-circle-outline$$
       type: none

     "&out OUT_TOG":
       shifted: $$mdi:usb$$
       tap: $$mdi:toggle-switch$$
       hold: $$mdi:bluetooth$$

     "&thread_arrow":
       tap: ->
       shifted: =>
     "&and":
       tap: and

   sticky_label: $$mdi:gesture-tap-hold$$
   trans_legend:
     tap: $$mdi:transfer$$
     type: trans
   mark_alternate_layer_activators: false
   zmk_keycode_map:
     EXCLAMATION: '!'
     EXCL: '!'
     AT_SIGN: '@'
     AT: '@'
     HASH: '#'
     POUND: '#'
     DOLLAR: $
     DLLR: $
     PERCENT: '%'
     PRCNT: '%'
     CARET: ^
     AMPERSAND: '&'
     AMPS: '&'
     ASTERISK: '*'
     ASTRK: '*'
     STAR: '*'
     LEFT_PARENTHESIS: (
     LPAR: (
     RIGHT_PARENTHESIS: )
     RPAR: )
     EQUAL: '='
     PLUS: +
     MINUS: '-'
     UNDERSCORE: _
     UNDER: _
     SLASH: /
     FSLH: /
     QUESTION: '?'
     QMARK: '?'
     BACKSLASH: \
     BSLH: \
     PIPE: '|'
     NON_US_BACKSLASH: \
     PIPE2: '|'
     NON_US_BSLH: '|'
     SEMICOLON: ;
     SEMI: ;
     COLON: ':'
     SINGLE_QUOTE: ''''
     SQT: ''''
     APOSTROPHE: <
     APOS: .
     DOUBLE_QUOTES: '"'
     DQT: '"'
     COMMA: ','
     LESS_THAN: <
     LT: <
     PERIOD: .
     DOT: .
     GREATER_THAN: '>'
     GT: '>'
     LEFT_BRACKET: '['
     LBKT: '['
     LEFT_BRACE: '{'
     LBRC: '{'
     RIGHT_BRACKET: ']'
     RBKT: ']'
     RIGHT_BRACE: '}'
     RBRC: '}'
     GRAVE: '`'
     TILDE: '~'
     NON_US_HASH: '#'
     NUHS: '#'
     TILDE2: '~'

     # Modifiers
     LCTRL: $$mdi:apple-keyboard-control$$
     LALT: $$mdi:apple-keyboard-option$$
     LSHIFT: $$mdi:apple-keyboard-shift$$
     LSHFT: $$mdi:apple-keyboard-shift$$
     LGUI: $$mdi:apple-keyboard-command$$
     RCTRL: $$mdi:apple-keyboard-control$$
     RALT: $$mdi:apple-keyboard-option$$
     RSHIFT: $$mdi:apple-keyboard-shift$$
     RSHFT: $$mdi:apple-keyboard-shift$$
     RGUI: $$mdi:apple-keyboard-command$$

     # "Meh" key
     LS(LC(LALT)): $$mdi:star-three-points$$
     LC(INS): "üìÑ"
     LS(INS): "üìã"
     LS(DEL): "‚úÇÔ∏è"
     LG(Q): "‚åòQ"
     LC(W): "‚åÉW"
     LC(T): "‚åÉT"
     LC(TAB): "‚åÉ‚á•"
     LS(LC(TAB)): "‚áß‚åÉ‚á•"
     RC(BSPC): ^BSPC

     # Arrows
     UP: $$mdi:arrow-up-bold$$
     DOWN: $$mdi:arrow-down-bold$$
     LEFT: $$mdi:arrow-left-bold$$
     RIGHT: $$mdi:arrow-right-bold$$

     # Whitespace
     RET:
       type: enter
       tap: $$mdi:keyboard-return$$
     ESC: $$mdi:keyboard-esc$$
     TAB: $$mdi:keyboard-tab$$
     LS(TAB): $$mdi:keyboard-tab-reverse$$
     SPACE: $$mdi:keyboard-space$$
     BACKSPACE:
       type: backspace
       tap: $$mdi:backspace$$
     BSPC:
       type: backspace
       tap: $$mdi:backspace$$
     DELETE: $$mdi:backspace-reverse-outline$$
     DEL: $$mdi:backspace-reverse-outline$$

     # Locks
     CAPSLOCK: $$mdi:apple-keyboard-caps$$
     CAPS: $$mdi:apple-keyboard-caps$$

     # Sound
     K_MUTE: $$mdi:volume-off$$
     K_VOL_UP: $$mdi:volume-high$$
     K_VOL_DN: $$mdi:volume-low$$

     # Media
     K_NEXT: $$mdi:skip-next$$
     K_PREV: $$mdi:skip-previous$$
     K_PP: $$mdi:play-pause$$
     K_STOP2: $$mdi:stop-circle-outline$$

     # Bluetooth
     BT_CLR: $$mdi:bluetooth-off$$
     BT_SEL: $$mdi:bluetooth-connect$$
     K_REDO: $$mdi:redo$$
     K_PASTE: $$mdi:content-paste$$
     K_COPY: $$mdi:content-copy$$
     K_CUT: $$mdi:content-cut$$
     K_UNDO: $$mdi:undo-variant$$

   zmk_combos: {}
